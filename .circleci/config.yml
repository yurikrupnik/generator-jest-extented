version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
node: &node
  working_directory: ~/repo
  docker:
    - image: circleci/node

jobs:
  test_latest_node:
    <<: *node
    steps:
      - checkout
      - run: npm install
      - run: npm run test
      - run: npm run build
      - run: npm run test
#      - run: npm run test:coveralls
#      - store_artifacts:
#        path: ./alor
  test:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install
      - run:
          name: Run tests
          command: npm run test
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
#      - codecov/upload:
#        file: {{ coverage_report_filepath }}
#        token: 530f42a5-72fb-4b4b-b7a5-54172f9d30a8
#      - store_artifacts:
#          path: sasd

#      - persist_to_workspace:
#          root: ~/repo
#          paths: .

  build:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install
      - run:
          name: Run tests
          command: npm build

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

#      - persist_to_workspace:
#          root: /tmp/workspace
#          paths: .

  deploy:
    <<: *node
    steps:
#      - attach_workspace:
#            at: /tmp/workspace
      - checkout
      - run: npm install
      - run: npm run build
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test_all:
    jobs:
      - test_latest_node

  test-build-deploy:
    jobs:
      - test
#      - deploy:
#          branch: master
#          tag: /(v)?[0-9]+(\.[0-9]+)*/

#        requires:
#          - build
#        filters:
#          tags:
#            only: /^v.*/
#          branches:
#            ignore: /.*/
